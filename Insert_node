// Editor : Saurabh S. Joshi
// Date:22-12-2021 @ 11:30
// --------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

class node {
    public:
        int data;
        struct node* next;
};
// Insert the node at the front of the linked list using pointer to pointer approach
void push(node** head_ref, int new_data ){
    node* new_node=new node();
    new_node->data=new_data;
    new_node->next= (*head_ref);
    (*head_ref)=new_node;
}

void insertAfter(node* prev_node,int new_data){
    if(prev_node==NULL){
        cout<<"The previous node cannot be null";
        return;
    }
    node* new_node=new node();
    
    new_node->data=new_data;
    new_node->next=prev_node->next;
    prev_node->next=new_node;
}

void append(node** head_ref,int new_data){
    node* new_node=new node();
    node* last=*head_ref;
    new_node->data=new_data;
    new_node->next=NULL;
    if(*head_ref == NULL){
        *head_ref=new_node;
        return;
    }
    while(last->next != NULL){
        last=last->next;
    }
    last->next=new_node;
    return;
}

void print(node* node){
    while(node!=NULL){
        cout<<" "<<node->data;
        node=node->next;
    }
}

int main(){
    node* head=NULL;
    append(&head,6);
    push(&head,88);
    push(&head,34);
    append(&head,4);
    insertAfter(head->next->next,99);
    cout<<"Created Linked List:";
    print(head);
    return 0;
}

// Editor : Saurabh S. Joshi
// Date:22-12-2021 @ 11:30
// --------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

class node {
    public:
        int data;
        struct node* next;
};
// Insert the node at the front of the linked list using pointer to pointer approach
void push(node** head_ref, int new_data ){
    node* new_node=new node();
    new_node->data=new_data;
    new_node->next= (*head_ref);
    (*head_ref)=new_node;
}

void insertAfter(node* prev_node,int new_data){
    if(prev_node==NULL){
        cout<<"The previous node cannot be null";
        return;
    }
    node* new_node=new node();
    
    new_node->data=new_data;
    new_node->next=prev_node->next;
    prev_node->next=new_node;
}

void append(node** head_ref,int new_data){
    node* new_node=new node();
    node* last=*head_ref;
    new_node->data=new_data;
    new_node->next=NULL;
    if(*head_ref == NULL){
        *head_ref=new_node;
        return;
    }
    while(last->next != NULL){
        last=last->next;
    }
    last->next=new_node;
    return;
}

void print(node* node){
    while(node!=NULL){
        cout<<" "<<node->data;
        node=node->next;
    }
}

int main(){
    node* head=NULL;
    append(&head,6);
    push(&head,88);
    push(&head,34);
    append(&head,4);
    insertAfter(head->next->next,99);
    cout<<"Created Linked List:";
    print(head);
    return 0;
}

// Editor : Saurabh S. Joshi
// Date:22-12-2021 @ 11:30
// --------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

class node {
    public:
        int data;
        struct node* next;
};
// Insert the node at the front of the linked list using pointer to pointer approach
void push(node** head_ref, int new_data ){
    node* new_node=new node();
    new_node->data=new_data;
    new_node->next= (*head_ref);
    (*head_ref)=new_node;
}

void insertAfter(node* prev_node,int new_data){
    if(prev_node==NULL){
        cout<<"The previous node cannot be null";
        return;
    }
    node* new_node=new node();
    
    new_node->data=new_data;
    new_node->next=prev_node->next;
    prev_node->next=new_node;
}

void append(node** head_ref,int new_data){
    node* new_node=new node();
    node* last=*head_ref;
    new_node->data=new_data;
    new_node->next=NULL;
    if(*head_ref == NULL){
        *head_ref=new_node;
        return;
    }
    while(last->next != NULL){
        last=last->next;
    }
    last->next=new_node;
    return;
}

void print(node* node){
    while(node!=NULL){
        cout<<" "<<node->data;
        node=node->next;
    }
}

int main(){
    node* head=NULL;
    append(&head,6);
    push(&head,88);
    push(&head,34);
    append(&head,4);
    insertAfter(head->next->next,99);
    cout<<"Created Linked List:";
    print(head);
    return 0;
}

// Editor : Saurabh S. Joshi
// Date:22-12-2021 @ 11:30
// --------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

class node {
    public:
        int data;
        struct node* next;
};
// Insert the node at the front of the linked list using pointer to pointer approach
void push(node** head_ref, int new_data ){
    node* new_node=new node();
    new_node->data=new_data;
    new_node->next= (*head_ref);
    (*head_ref)=new_node;
}

void insertAfter(node* prev_node,int new_data){
    if(prev_node==NULL){
        cout<<"The previous node cannot be null";
        return;
    }
    node* new_node=new node();
    
    new_node->data=new_data;
    new_node->next=prev_node->next;
    prev_node->next=new_node;
}

void append(node** head_ref,int new_data){
    node* new_node=new node();
    node* last=*head_ref;
    new_node->data=new_data;
    new_node->next=NULL;
    if(*head_ref == NULL){
        *head_ref=new_node;
        return;
    }
    while(last->next != NULL){
        last=last->next;
    }
    last->next=new_node;
    return;
}

void print(node* node){
    while(node!=NULL){
        cout<<" "<<node->data;
        node=node->next;
    }
}

int main(){
    node* head=NULL;
    append(&head,6);
    push(&head,88);
    push(&head,34);
    append(&head,4);
    insertAfter(head->next->next,99);
    cout<<"Created Linked List:";
    print(head);
    return 0;
}

Output:
Created Linked List:34 88 6 99 4
